// <auto-generated />
using System;
using BasicBoard.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BasicBoard.Migrations
{
    [DbContext(typeof(BasicboardDbContext))]
    [Migration("20210618063121_CreateReply")]
    partial class CreateReply
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("BasicBoard.Models.Board", b =>
                {
                    b.Property<int>("BoardNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BoardContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BoardTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BoardUpdateDate")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("BoardViews")
                        .HasColumnType("int");

                    b.Property<int>("UserNo")
                        .HasColumnType("int");

                    b.HasKey("BoardNo");

                    b.HasIndex("UserNo");

                    b.ToTable("Board");
                });

            modelBuilder.Entity("BasicBoard.Models.Reply", b =>
                {
                    b.Property<int>("ReplyNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BoardNo")
                        .HasColumnType("int");

                    b.Property<int>("ReplyBunOrder")
                        .HasColumnType("int");

                    b.Property<int>("ReplyBundle")
                        .HasColumnType("int");

                    b.Property<string>("ReplyContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ReplyDelDt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ReplyLyaer")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReplyRegDt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ReplyUptDt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReplyNo");

                    b.HasIndex("BoardNo");

                    b.HasIndex("UserId");

                    b.ToTable("Reply");
                });

            modelBuilder.Entity("BasicBoard.Models.User", b =>
                {
                    b.Property<int>("UserNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserNo");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BasicBoard.Models.Board", b =>
                {
                    b.HasOne("BasicBoard.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BasicBoard.Models.Reply", b =>
                {
                    b.HasOne("BasicBoard.Models.Board", "Board")
                        .WithMany()
                        .HasForeignKey("BoardNo");

                    b.HasOne("BasicBoard.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Board");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
